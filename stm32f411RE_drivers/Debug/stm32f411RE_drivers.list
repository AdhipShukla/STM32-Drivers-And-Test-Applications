
stm32f411RE_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007b8  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000950  08000958  00010958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000950  08000950  00010958  2**0
                  CONTENTS
  4 .ARM          00000000  08000950  08000950  00010958  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000950  08000958  00010958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000950  08000950  00010950  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000954  08000954  00010954  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000958  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000958  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010958  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010988  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000998  00000000  00000000  000109cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000023f  00000000  00000000  00011363  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000115a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008b  00000000  00000000  00011670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001428  00000000  00000000  000116fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f27  00000000  00000000  00012b23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005628  00000000  00000000  00013a4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000268  00000000  00000000  00019074  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000065  00000000  00000000  000192dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000938 	.word	0x08000938

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000938 	.word	0x08000938

080001d8 <GPIO_PeriClockControl>:
 * @return 			- none
 *
 * @Note			- none
********************************************************************/

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnORDi){
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	460b      	mov	r3, r1
 80001e2:	70fb      	strb	r3, [r7, #3]
	if(EnORDi == ENABLE){
 80001e4:	78fb      	ldrb	r3, [r7, #3]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d141      	bne.n	800026e <GPIO_PeriClockControl+0x96>
		if(pGPIOx == GPIOA){
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a43      	ldr	r2, [pc, #268]	; (80002fc <GPIO_PeriClockControl+0x124>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d106      	bne.n	8000200 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80001f2:	4b43      	ldr	r3, [pc, #268]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80001f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f6:	4a42      	ldr	r2, [pc, #264]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80001f8:	f043 0301 	orr.w	r3, r3, #1
 80001fc:	6313      	str	r3, [r2, #48]	; 0x30
		}
		else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}
}
 80001fe:	e077      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB){
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a40      	ldr	r2, [pc, #256]	; (8000304 <GPIO_PeriClockControl+0x12c>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d106      	bne.n	8000216 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000208:	4b3d      	ldr	r3, [pc, #244]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a3c      	ldr	r2, [pc, #240]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000214:	e06c      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC){
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a3b      	ldr	r2, [pc, #236]	; (8000308 <GPIO_PeriClockControl+0x130>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800021e:	4b38      	ldr	r3, [pc, #224]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a37      	ldr	r2, [pc, #220]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000224:	f043 0304 	orr.w	r3, r3, #4
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
}
 800022a:	e061      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD){
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a37      	ldr	r2, [pc, #220]	; (800030c <GPIO_PeriClockControl+0x134>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000234:	4b32      	ldr	r3, [pc, #200]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a31      	ldr	r2, [pc, #196]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800023a:	f043 0308 	orr.w	r3, r3, #8
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e056      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE){
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a32      	ldr	r2, [pc, #200]	; (8000310 <GPIO_PeriClockControl+0x138>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800024a:	4b2d      	ldr	r3, [pc, #180]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a2c      	ldr	r2, [pc, #176]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e04b      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH){
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a2e      	ldr	r2, [pc, #184]	; (8000314 <GPIO_PeriClockControl+0x13c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d147      	bne.n	80002f0 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_EN();
 8000260:	4b27      	ldr	r3, [pc, #156]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a26      	ldr	r2, [pc, #152]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000266:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e040      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA){
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a22      	ldr	r2, [pc, #136]	; (80002fc <GPIO_PeriClockControl+0x124>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 8000276:	4b22      	ldr	r3, [pc, #136]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a21      	ldr	r2, [pc, #132]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800027c:	f023 0301 	bic.w	r3, r3, #1
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e035      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB){
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a1f      	ldr	r2, [pc, #124]	; (8000304 <GPIO_PeriClockControl+0x12c>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 800028c:	4b1c      	ldr	r3, [pc, #112]	; (8000300 <GPIO_PeriClockControl+0x128>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a1b      	ldr	r2, [pc, #108]	; (8000300 <GPIO_PeriClockControl+0x128>)
 8000292:	f023 0302 	bic.w	r3, r3, #2
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e02a      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC){
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a1a      	ldr	r2, [pc, #104]	; (8000308 <GPIO_PeriClockControl+0x130>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 80002a2:	4b17      	ldr	r3, [pc, #92]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a6:	4a16      	ldr	r2, [pc, #88]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002a8:	f023 0304 	bic.w	r3, r3, #4
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ae:	e01f      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD){
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a16      	ldr	r2, [pc, #88]	; (800030c <GPIO_PeriClockControl+0x134>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d106      	bne.n	80002c6 <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 80002b8:	4b11      	ldr	r3, [pc, #68]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a10      	ldr	r2, [pc, #64]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002be:	f023 0308 	bic.w	r3, r3, #8
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c4:	e014      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE){
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a11      	ldr	r2, [pc, #68]	; (8000310 <GPIO_PeriClockControl+0x138>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 80002ce:	4b0c      	ldr	r3, [pc, #48]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a0b      	ldr	r2, [pc, #44]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002d4:	f023 0310 	bic.w	r3, r3, #16
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e009      	b.n	80002f0 <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH){
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a0d      	ldr	r2, [pc, #52]	; (8000314 <GPIO_PeriClockControl+0x13c>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d105      	bne.n	80002f0 <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_DI();
 80002e4:	4b06      	ldr	r3, [pc, #24]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a05      	ldr	r2, [pc, #20]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	bf00      	nop
 80002f2:	370c      	adds	r7, #12
 80002f4:	46bd      	mov	sp, r7
 80002f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fa:	4770      	bx	lr
 80002fc:	40020000 	.word	0x40020000
 8000300:	40023800 	.word	0x40023800
 8000304:	40020400 	.word	0x40020400
 8000308:	40020800 	.word	0x40020800
 800030c:	40020c00 	.word	0x40020c00
 8000310:	40021000 	.word	0x40021000
 8000314:	40021c00 	.word	0x40021c00

08000318 <GPIO_Init>:
 * @param[in]		-
 * @return 			- none
 *
 * @Note			- none
********************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000318:	b480      	push	{r7}
 800031a:	b085      	sub	sp, #20
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
	// Setting pin mode
	uint32_t temp =0;
 8000320:	2300      	movs	r3, #0
 8000322:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_Config.GPIO_PinMode<=GPIO_MODE_ANALOG){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	795b      	ldrb	r3, [r3, #5]
 8000328:	2b03      	cmp	r3, #3
 800032a:	d820      	bhi.n	800036e <GPIO_Init+0x56>
		temp = (pGPIOHandle->GPIO_Config.GPIO_PinMode << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	795b      	ldrb	r3, [r3, #5]
 8000330:	461a      	mov	r2, r3
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	791b      	ldrb	r3, [r3, #4]
 8000336:	005b      	lsls	r3, r3, #1
 8000338:	fa02 f303 	lsl.w	r3, r2, r3
 800033c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	005b      	lsls	r3, r3, #1
 800034a:	2103      	movs	r1, #3
 800034c:	fa01 f303 	lsl.w	r3, r1, r3
 8000350:	43db      	mvns	r3, r3
 8000352:	4619      	mov	r1, r3
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	400a      	ands	r2, r1
 800035a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	6819      	ldr	r1, [r3, #0]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	68fa      	ldr	r2, [r7, #12]
 8000368:	430a      	orrs	r2, r1
 800036a:	601a      	str	r2, [r3, #0]
 800036c:	e0c7      	b.n	80004fe <GPIO_Init+0x1e6>
	}else{ //These are interrupt modes
		if(pGPIOHandle->GPIO_Config.GPIO_PinMode==GPIO_MODE_IT_FT){
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	795b      	ldrb	r3, [r3, #5]
 8000372:	2b04      	cmp	r3, #4
 8000374:	d123      	bne.n	80003be <GPIO_Init+0xa6>
		//1. Configuring the FTSR
			EXTI->FTSR &= ~(0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 8000376:	4b4c      	ldr	r3, [pc, #304]	; (80004a8 <GPIO_Init+0x190>)
 8000378:	68db      	ldr	r3, [r3, #12]
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	7912      	ldrb	r2, [r2, #4]
 800037e:	4611      	mov	r1, r2
 8000380:	2201      	movs	r2, #1
 8000382:	408a      	lsls	r2, r1
 8000384:	43d2      	mvns	r2, r2
 8000386:	4611      	mov	r1, r2
 8000388:	4a47      	ldr	r2, [pc, #284]	; (80004a8 <GPIO_Init+0x190>)
 800038a:	400b      	ands	r3, r1
 800038c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 800038e:	4b46      	ldr	r3, [pc, #280]	; (80004a8 <GPIO_Init+0x190>)
 8000390:	689b      	ldr	r3, [r3, #8]
 8000392:	687a      	ldr	r2, [r7, #4]
 8000394:	7912      	ldrb	r2, [r2, #4]
 8000396:	4611      	mov	r1, r2
 8000398:	2201      	movs	r2, #1
 800039a:	408a      	lsls	r2, r1
 800039c:	43d2      	mvns	r2, r2
 800039e:	4611      	mov	r1, r2
 80003a0:	4a41      	ldr	r2, [pc, #260]	; (80004a8 <GPIO_Init+0x190>)
 80003a2:	400b      	ands	r3, r1
 80003a4:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |=  (0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80003a6:	4b40      	ldr	r3, [pc, #256]	; (80004a8 <GPIO_Init+0x190>)
 80003a8:	68db      	ldr	r3, [r3, #12]
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	7912      	ldrb	r2, [r2, #4]
 80003ae:	4611      	mov	r1, r2
 80003b0:	2201      	movs	r2, #1
 80003b2:	408a      	lsls	r2, r1
 80003b4:	4611      	mov	r1, r2
 80003b6:	4a3c      	ldr	r2, [pc, #240]	; (80004a8 <GPIO_Init+0x190>)
 80003b8:	430b      	orrs	r3, r1
 80003ba:	60d3      	str	r3, [r2, #12]
 80003bc:	e041      	b.n	8000442 <GPIO_Init+0x12a>
		}else if(pGPIOHandle->GPIO_Config.GPIO_PinMode==GPIO_MODE_IT_RT){
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	795b      	ldrb	r3, [r3, #5]
 80003c2:	2b05      	cmp	r3, #5
 80003c4:	d123      	bne.n	800040e <GPIO_Init+0xf6>
		//1. Configuring the RTSR
			EXTI->FTSR &= ~(0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80003c6:	4b38      	ldr	r3, [pc, #224]	; (80004a8 <GPIO_Init+0x190>)
 80003c8:	68db      	ldr	r3, [r3, #12]
 80003ca:	687a      	ldr	r2, [r7, #4]
 80003cc:	7912      	ldrb	r2, [r2, #4]
 80003ce:	4611      	mov	r1, r2
 80003d0:	2201      	movs	r2, #1
 80003d2:	408a      	lsls	r2, r1
 80003d4:	43d2      	mvns	r2, r2
 80003d6:	4611      	mov	r1, r2
 80003d8:	4a33      	ldr	r2, [pc, #204]	; (80004a8 <GPIO_Init+0x190>)
 80003da:	400b      	ands	r3, r1
 80003dc:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80003de:	4b32      	ldr	r3, [pc, #200]	; (80004a8 <GPIO_Init+0x190>)
 80003e0:	689b      	ldr	r3, [r3, #8]
 80003e2:	687a      	ldr	r2, [r7, #4]
 80003e4:	7912      	ldrb	r2, [r2, #4]
 80003e6:	4611      	mov	r1, r2
 80003e8:	2201      	movs	r2, #1
 80003ea:	408a      	lsls	r2, r1
 80003ec:	43d2      	mvns	r2, r2
 80003ee:	4611      	mov	r1, r2
 80003f0:	4a2d      	ldr	r2, [pc, #180]	; (80004a8 <GPIO_Init+0x190>)
 80003f2:	400b      	ands	r3, r1
 80003f4:	6093      	str	r3, [r2, #8]
			EXTI->RTSR |=  (0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80003f6:	4b2c      	ldr	r3, [pc, #176]	; (80004a8 <GPIO_Init+0x190>)
 80003f8:	689b      	ldr	r3, [r3, #8]
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	7912      	ldrb	r2, [r2, #4]
 80003fe:	4611      	mov	r1, r2
 8000400:	2201      	movs	r2, #1
 8000402:	408a      	lsls	r2, r1
 8000404:	4611      	mov	r1, r2
 8000406:	4a28      	ldr	r2, [pc, #160]	; (80004a8 <GPIO_Init+0x190>)
 8000408:	430b      	orrs	r3, r1
 800040a:	6093      	str	r3, [r2, #8]
 800040c:	e019      	b.n	8000442 <GPIO_Init+0x12a>
		}else if(pGPIOHandle->GPIO_Config.GPIO_PinMode==GPIO_MODE_IT_RFT){
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	795b      	ldrb	r3, [r3, #5]
 8000412:	2b06      	cmp	r3, #6
 8000414:	d115      	bne.n	8000442 <GPIO_Init+0x12a>
		//1. Configuring the RFTS
			EXTI->RTSR |=  (0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 8000416:	4b24      	ldr	r3, [pc, #144]	; (80004a8 <GPIO_Init+0x190>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	7912      	ldrb	r2, [r2, #4]
 800041e:	4611      	mov	r1, r2
 8000420:	2201      	movs	r2, #1
 8000422:	408a      	lsls	r2, r1
 8000424:	4611      	mov	r1, r2
 8000426:	4a20      	ldr	r2, [pc, #128]	; (80004a8 <GPIO_Init+0x190>)
 8000428:	430b      	orrs	r3, r1
 800042a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |=  (0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 800042c:	4b1e      	ldr	r3, [pc, #120]	; (80004a8 <GPIO_Init+0x190>)
 800042e:	68db      	ldr	r3, [r3, #12]
 8000430:	687a      	ldr	r2, [r7, #4]
 8000432:	7912      	ldrb	r2, [r2, #4]
 8000434:	4611      	mov	r1, r2
 8000436:	2201      	movs	r2, #1
 8000438:	408a      	lsls	r2, r1
 800043a:	4611      	mov	r1, r2
 800043c:	4a1a      	ldr	r2, [pc, #104]	; (80004a8 <GPIO_Init+0x190>)
 800043e:	430b      	orrs	r3, r1
 8000440:	60d3      	str	r3, [r2, #12]
		}

		//2. Configure the GPIO port. By default EXTI is configured to port A for every pin
		uint8_t temp1 = pGPIOHandle->GPIO_Config.GPIO_PinNumber/4;
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	089b      	lsrs	r3, r3, #2
 8000448:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2 = pGPIOHandle->GPIO_Config.GPIO_PinNumber%4;
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	791b      	ldrb	r3, [r3, #4]
 800044e:	f003 0303 	and.w	r3, r3, #3
 8000452:	72bb      	strb	r3, [r7, #10]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	4a14      	ldr	r2, [pc, #80]	; (80004ac <GPIO_Init+0x194>)
 800045a:	4293      	cmp	r3, r2
 800045c:	d032      	beq.n	80004c4 <GPIO_Init+0x1ac>
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	4a13      	ldr	r2, [pc, #76]	; (80004b0 <GPIO_Init+0x198>)
 8000464:	4293      	cmp	r3, r2
 8000466:	d01d      	beq.n	80004a4 <GPIO_Init+0x18c>
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	4a11      	ldr	r2, [pc, #68]	; (80004b4 <GPIO_Init+0x19c>)
 800046e:	4293      	cmp	r3, r2
 8000470:	d016      	beq.n	80004a0 <GPIO_Init+0x188>
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	4a10      	ldr	r2, [pc, #64]	; (80004b8 <GPIO_Init+0x1a0>)
 8000478:	4293      	cmp	r3, r2
 800047a:	d00f      	beq.n	800049c <GPIO_Init+0x184>
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4a0e      	ldr	r2, [pc, #56]	; (80004bc <GPIO_Init+0x1a4>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d008      	beq.n	8000498 <GPIO_Init+0x180>
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	4a0d      	ldr	r2, [pc, #52]	; (80004c0 <GPIO_Init+0x1a8>)
 800048c:	4293      	cmp	r3, r2
 800048e:	d101      	bne.n	8000494 <GPIO_Init+0x17c>
 8000490:	2307      	movs	r3, #7
 8000492:	e018      	b.n	80004c6 <GPIO_Init+0x1ae>
 8000494:	2300      	movs	r3, #0
 8000496:	e016      	b.n	80004c6 <GPIO_Init+0x1ae>
 8000498:	2304      	movs	r3, #4
 800049a:	e014      	b.n	80004c6 <GPIO_Init+0x1ae>
 800049c:	2303      	movs	r3, #3
 800049e:	e012      	b.n	80004c6 <GPIO_Init+0x1ae>
 80004a0:	2302      	movs	r3, #2
 80004a2:	e010      	b.n	80004c6 <GPIO_Init+0x1ae>
 80004a4:	2301      	movs	r3, #1
 80004a6:	e00e      	b.n	80004c6 <GPIO_Init+0x1ae>
 80004a8:	40013c00 	.word	0x40013c00
 80004ac:	40020000 	.word	0x40020000
 80004b0:	40020400 	.word	0x40020400
 80004b4:	40020800 	.word	0x40020800
 80004b8:	40020c00 	.word	0x40020c00
 80004bc:	40021000 	.word	0x40021000
 80004c0:	40021c00 	.word	0x40021c00
 80004c4:	2300      	movs	r3, #0
 80004c6:	727b      	strb	r3, [r7, #9]
		SYSCFG_PCLK_EN();
 80004c8:	4b60      	ldr	r3, [pc, #384]	; (800064c <GPIO_Init+0x334>)
 80004ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004cc:	4a5f      	ldr	r2, [pc, #380]	; (800064c <GPIO_Init+0x334>)
 80004ce:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004d2:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 80004d4:	7a7a      	ldrb	r2, [r7, #9]
 80004d6:	7abb      	ldrb	r3, [r7, #10]
 80004d8:	009b      	lsls	r3, r3, #2
 80004da:	fa02 f103 	lsl.w	r1, r2, r3
 80004de:	4a5c      	ldr	r2, [pc, #368]	; (8000650 <GPIO_Init+0x338>)
 80004e0:	7afb      	ldrb	r3, [r7, #11]
 80004e2:	3302      	adds	r3, #2
 80004e4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. Enabling the EXTI interrupt delivery using IMR
		EXTI->IMR |=  (0X01<<pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80004e8:	4b5a      	ldr	r3, [pc, #360]	; (8000654 <GPIO_Init+0x33c>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	687a      	ldr	r2, [r7, #4]
 80004ee:	7912      	ldrb	r2, [r2, #4]
 80004f0:	4611      	mov	r1, r2
 80004f2:	2201      	movs	r2, #1
 80004f4:	408a      	lsls	r2, r1
 80004f6:	4611      	mov	r1, r2
 80004f8:	4a56      	ldr	r2, [pc, #344]	; (8000654 <GPIO_Init+0x33c>)
 80004fa:	430b      	orrs	r3, r1
 80004fc:	6013      	str	r3, [r2, #0]
	}

	// Setting pin speed
	temp = pGPIOHandle->GPIO_Config.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	799b      	ldrb	r3, [r3, #6]
 8000502:	461a      	mov	r2, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	791b      	ldrb	r3, [r3, #4]
 8000508:	005b      	lsls	r3, r3, #1
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	689a      	ldr	r2, [r3, #8]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	005b      	lsls	r3, r3, #1
 800051c:	2103      	movs	r1, #3
 800051e:	fa01 f303 	lsl.w	r3, r1, r3
 8000522:	43db      	mvns	r3, r3
 8000524:	4619      	mov	r1, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	400a      	ands	r2, r1
 800052c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	6899      	ldr	r1, [r3, #8]
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	68fa      	ldr	r2, [r7, #12]
 800053a:	430a      	orrs	r2, r1
 800053c:	609a      	str	r2, [r3, #8]


	// Setting pin pull up/ pull down
	temp = pGPIOHandle->GPIO_Config.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	79db      	ldrb	r3, [r3, #7]
 8000542:	461a      	mov	r2, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	005b      	lsls	r3, r3, #1
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	68da      	ldr	r2, [r3, #12]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	791b      	ldrb	r3, [r3, #4]
 800055a:	005b      	lsls	r3, r3, #1
 800055c:	2103      	movs	r1, #3
 800055e:	fa01 f303 	lsl.w	r3, r1, r3
 8000562:	43db      	mvns	r3, r3
 8000564:	4619      	mov	r1, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	400a      	ands	r2, r1
 800056c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	68d9      	ldr	r1, [r3, #12]
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	68fa      	ldr	r2, [r7, #12]
 800057a:	430a      	orrs	r2, r1
 800057c:	60da      	str	r2, [r3, #12]


	// Setting pin output type
	temp = pGPIOHandle->GPIO_Config.GPIO_PinOPType << (pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	7a1b      	ldrb	r3, [r3, #8]
 8000582:	461a      	mov	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	fa02 f303 	lsl.w	r3, r2, r3
 800058c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x03 << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	685a      	ldr	r2, [r3, #4]
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	791b      	ldrb	r3, [r3, #4]
 8000598:	005b      	lsls	r3, r3, #1
 800059a:	2103      	movs	r1, #3
 800059c:	fa01 f303 	lsl.w	r3, r1, r3
 80005a0:	43db      	mvns	r3, r3
 80005a2:	4619      	mov	r1, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	400a      	ands	r2, r1
 80005aa:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	6859      	ldr	r1, [r3, #4]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	68fa      	ldr	r2, [r7, #12]
 80005b8:	430a      	orrs	r2, r1
 80005ba:	605a      	str	r2, [r3, #4]


	// Setting pin alternate function
	if(pGPIOHandle->GPIO_Config.GPIO_PinMode==GPIO_MODE_ALTFN){
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	795b      	ldrb	r3, [r3, #5]
 80005c0:	2b02      	cmp	r3, #2
 80005c2:	d13d      	bne.n	8000640 <GPIO_Init+0x328>
		temp = pGPIOHandle->GPIO_Config.GPIO_PinAltFunMode << (2 * pGPIOHandle->GPIO_Config.GPIO_PinNumber);
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	7a5b      	ldrb	r3, [r3, #9]
 80005c8:	461a      	mov	r2, r3
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	005b      	lsls	r3, r3, #1
 80005d0:	fa02 f303 	lsl.w	r3, r2, r3
 80005d4:	60fb      	str	r3, [r7, #12]
		if(pGPIOHandle->GPIO_Config.GPIO_PinNumber<8){
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	791b      	ldrb	r3, [r3, #4]
 80005da:	2b07      	cmp	r3, #7
 80005dc:	d817      	bhi.n	800060e <GPIO_Init+0x2f6>
			pGPIOHandle->pGPIOx->AFRL &= ~(0x0f << (4 * pGPIOHandle->GPIO_Config.GPIO_PinNumber));
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	6a1a      	ldr	r2, [r3, #32]
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	791b      	ldrb	r3, [r3, #4]
 80005e8:	009b      	lsls	r3, r3, #2
 80005ea:	210f      	movs	r1, #15
 80005ec:	fa01 f303 	lsl.w	r3, r1, r3
 80005f0:	43db      	mvns	r3, r3
 80005f2:	4619      	mov	r1, r3
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	400a      	ands	r2, r1
 80005fa:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIOx->AFRL |= temp;
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	6a19      	ldr	r1, [r3, #32]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	68fa      	ldr	r2, [r7, #12]
 8000608:	430a      	orrs	r2, r1
 800060a:	621a      	str	r2, [r3, #32]
		} else {
			pGPIOHandle->pGPIOx->AFRH &= ~(0x0f << (4 * (pGPIOHandle->GPIO_Config.GPIO_PinNumber%8)));
			pGPIOHandle->pGPIOx->AFRH |= temp;
		}
	}
}
 800060c:	e018      	b.n	8000640 <GPIO_Init+0x328>
			pGPIOHandle->pGPIOx->AFRH &= ~(0x0f << (4 * (pGPIOHandle->GPIO_Config.GPIO_PinNumber%8)));
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	f003 0307 	and.w	r3, r3, #7
 800061c:	009b      	lsls	r3, r3, #2
 800061e:	210f      	movs	r1, #15
 8000620:	fa01 f303 	lsl.w	r3, r1, r3
 8000624:	43db      	mvns	r3, r3
 8000626:	4619      	mov	r1, r3
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	400a      	ands	r2, r1
 800062e:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOx->AFRH |= temp;
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	68fa      	ldr	r2, [r7, #12]
 800063c:	430a      	orrs	r2, r1
 800063e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000640:	bf00      	nop
 8000642:	3714      	adds	r7, #20
 8000644:	46bd      	mov	sp, r7
 8000646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800064a:	4770      	bx	lr
 800064c:	40023800 	.word	0x40023800
 8000650:	40013800 	.word	0x40013800
 8000654:	40013c00 	.word	0x40013c00

08000658 <GPIO_ToggleOutputPin>:
	}
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value){
	pGPIOx->ODR=Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000658:	b480      	push	{r7}
 800065a:	b083      	sub	sp, #12
 800065c:	af00      	add	r7, sp, #0
 800065e:	6078      	str	r0, [r7, #4]
 8000660:	460b      	mov	r3, r1
 8000662:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1<<PinNumber);
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	695b      	ldr	r3, [r3, #20]
 8000668:	78fa      	ldrb	r2, [r7, #3]
 800066a:	2101      	movs	r1, #1
 800066c:	fa01 f202 	lsl.w	r2, r1, r2
 8000670:	405a      	eors	r2, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	615a      	str	r2, [r3, #20]
}
 8000676:	bf00      	nop
 8000678:	370c      	adds	r7, #12
 800067a:	46bd      	mov	sp, r7
 800067c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000680:	4770      	bx	lr
	...

08000684 <GPIO_IRQ_Interrupt_Config>:

/*GPIO IRQ and ISR handling*/
void GPIO_IRQ_Interrupt_Config(uint8_t IRQNumber, uint8_t EnORDi){
 8000684:	b480      	push	{r7}
 8000686:	b083      	sub	sp, #12
 8000688:	af00      	add	r7, sp, #0
 800068a:	4603      	mov	r3, r0
 800068c:	460a      	mov	r2, r1
 800068e:	71fb      	strb	r3, [r7, #7]
 8000690:	4613      	mov	r3, r2
 8000692:	71bb      	strb	r3, [r7, #6]
	if (EnORDi == ENABLE){
 8000694:	79bb      	ldrb	r3, [r7, #6]
 8000696:	2b01      	cmp	r3, #1
 8000698:	d135      	bne.n	8000706 <GPIO_IRQ_Interrupt_Config+0x82>
		if(IRQNumber<32){
 800069a:	79fb      	ldrb	r3, [r7, #7]
 800069c:	2b1f      	cmp	r3, #31
 800069e:	d80c      	bhi.n	80006ba <GPIO_IRQ_Interrupt_Config+0x36>
			//Program ISER0 register
			*NVIC_ISER0_ADDR |= (1<<IRQNumber%32);
 80006a0:	4b37      	ldr	r3, [pc, #220]	; (8000780 <GPIO_IRQ_Interrupt_Config+0xfc>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	79fa      	ldrb	r2, [r7, #7]
 80006a6:	f002 021f 	and.w	r2, r2, #31
 80006aa:	2101      	movs	r1, #1
 80006ac:	fa01 f202 	lsl.w	r2, r1, r2
 80006b0:	4611      	mov	r1, r2
 80006b2:	4a33      	ldr	r2, [pc, #204]	; (8000780 <GPIO_IRQ_Interrupt_Config+0xfc>)
 80006b4:	430b      	orrs	r3, r1
 80006b6:	6013      	str	r3, [r2, #0]
		}else if (IRQNumber>63 && IRQNumber<96){
			//Program ICER2 register
			*NVIC_ICER0_ADDR |= (1<<IRQNumber%32);
		}
	}
}
 80006b8:	e05b      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
		}else if (IRQNumber>31 && IRQNumber<64){
 80006ba:	79fb      	ldrb	r3, [r7, #7]
 80006bc:	2b1f      	cmp	r3, #31
 80006be:	d90f      	bls.n	80006e0 <GPIO_IRQ_Interrupt_Config+0x5c>
 80006c0:	79fb      	ldrb	r3, [r7, #7]
 80006c2:	2b3f      	cmp	r3, #63	; 0x3f
 80006c4:	d80c      	bhi.n	80006e0 <GPIO_IRQ_Interrupt_Config+0x5c>
			*NVIC_ISER1_ADDR |= (1<<IRQNumber%32);
 80006c6:	4b2f      	ldr	r3, [pc, #188]	; (8000784 <GPIO_IRQ_Interrupt_Config+0x100>)
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	79fa      	ldrb	r2, [r7, #7]
 80006cc:	f002 021f 	and.w	r2, r2, #31
 80006d0:	2101      	movs	r1, #1
 80006d2:	fa01 f202 	lsl.w	r2, r1, r2
 80006d6:	4611      	mov	r1, r2
 80006d8:	4a2a      	ldr	r2, [pc, #168]	; (8000784 <GPIO_IRQ_Interrupt_Config+0x100>)
 80006da:	430b      	orrs	r3, r1
 80006dc:	6013      	str	r3, [r2, #0]
 80006de:	e048      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
		}else if (IRQNumber>63 && IRQNumber<96){
 80006e0:	79fb      	ldrb	r3, [r7, #7]
 80006e2:	2b3f      	cmp	r3, #63	; 0x3f
 80006e4:	d945      	bls.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
 80006e6:	79fb      	ldrb	r3, [r7, #7]
 80006e8:	2b5f      	cmp	r3, #95	; 0x5f
 80006ea:	d842      	bhi.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
			*NVIC_ISER0_ADDR |= (1<<IRQNumber%32);
 80006ec:	4b24      	ldr	r3, [pc, #144]	; (8000780 <GPIO_IRQ_Interrupt_Config+0xfc>)
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	79fa      	ldrb	r2, [r7, #7]
 80006f2:	f002 021f 	and.w	r2, r2, #31
 80006f6:	2101      	movs	r1, #1
 80006f8:	fa01 f202 	lsl.w	r2, r1, r2
 80006fc:	4611      	mov	r1, r2
 80006fe:	4a20      	ldr	r2, [pc, #128]	; (8000780 <GPIO_IRQ_Interrupt_Config+0xfc>)
 8000700:	430b      	orrs	r3, r1
 8000702:	6013      	str	r3, [r2, #0]
}
 8000704:	e035      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
		if(IRQNumber<32){
 8000706:	79fb      	ldrb	r3, [r7, #7]
 8000708:	2b1f      	cmp	r3, #31
 800070a:	d80c      	bhi.n	8000726 <GPIO_IRQ_Interrupt_Config+0xa2>
			*NVIC_ICER0_ADDR |= (1<<IRQNumber%32);
 800070c:	4b1e      	ldr	r3, [pc, #120]	; (8000788 <GPIO_IRQ_Interrupt_Config+0x104>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	79fa      	ldrb	r2, [r7, #7]
 8000712:	f002 021f 	and.w	r2, r2, #31
 8000716:	2101      	movs	r1, #1
 8000718:	fa01 f202 	lsl.w	r2, r1, r2
 800071c:	4611      	mov	r1, r2
 800071e:	4a1a      	ldr	r2, [pc, #104]	; (8000788 <GPIO_IRQ_Interrupt_Config+0x104>)
 8000720:	430b      	orrs	r3, r1
 8000722:	6013      	str	r3, [r2, #0]
}
 8000724:	e025      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
		}else if (IRQNumber>31 && IRQNumber<64){
 8000726:	79fb      	ldrb	r3, [r7, #7]
 8000728:	2b1f      	cmp	r3, #31
 800072a:	d90f      	bls.n	800074c <GPIO_IRQ_Interrupt_Config+0xc8>
 800072c:	79fb      	ldrb	r3, [r7, #7]
 800072e:	2b3f      	cmp	r3, #63	; 0x3f
 8000730:	d80c      	bhi.n	800074c <GPIO_IRQ_Interrupt_Config+0xc8>
			*NVIC_ICER1_ADDR |= (1<<IRQNumber%32);
 8000732:	4b16      	ldr	r3, [pc, #88]	; (800078c <GPIO_IRQ_Interrupt_Config+0x108>)
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	79fa      	ldrb	r2, [r7, #7]
 8000738:	f002 021f 	and.w	r2, r2, #31
 800073c:	2101      	movs	r1, #1
 800073e:	fa01 f202 	lsl.w	r2, r1, r2
 8000742:	4611      	mov	r1, r2
 8000744:	4a11      	ldr	r2, [pc, #68]	; (800078c <GPIO_IRQ_Interrupt_Config+0x108>)
 8000746:	430b      	orrs	r3, r1
 8000748:	6013      	str	r3, [r2, #0]
 800074a:	e012      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
		}else if (IRQNumber>63 && IRQNumber<96){
 800074c:	79fb      	ldrb	r3, [r7, #7]
 800074e:	2b3f      	cmp	r3, #63	; 0x3f
 8000750:	d90f      	bls.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
 8000752:	79fb      	ldrb	r3, [r7, #7]
 8000754:	2b5f      	cmp	r3, #95	; 0x5f
 8000756:	d80c      	bhi.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
			*NVIC_ICER0_ADDR |= (1<<IRQNumber%32);
 8000758:	4b0b      	ldr	r3, [pc, #44]	; (8000788 <GPIO_IRQ_Interrupt_Config+0x104>)
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	79fa      	ldrb	r2, [r7, #7]
 800075e:	f002 021f 	and.w	r2, r2, #31
 8000762:	2101      	movs	r1, #1
 8000764:	fa01 f202 	lsl.w	r2, r1, r2
 8000768:	4611      	mov	r1, r2
 800076a:	4a07      	ldr	r2, [pc, #28]	; (8000788 <GPIO_IRQ_Interrupt_Config+0x104>)
 800076c:	430b      	orrs	r3, r1
 800076e:	6013      	str	r3, [r2, #0]
}
 8000770:	e7ff      	b.n	8000772 <GPIO_IRQ_Interrupt_Config+0xee>
 8000772:	bf00      	nop
 8000774:	370c      	adds	r7, #12
 8000776:	46bd      	mov	sp, r7
 8000778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800077c:	4770      	bx	lr
 800077e:	bf00      	nop
 8000780:	e000e100 	.word	0xe000e100
 8000784:	e000e104 	.word	0xe000e104
 8000788:	e000e180 	.word	0xe000e180
 800078c:	e000e184 	.word	0xe000e184

08000790 <GPIO_IRQ_Priority_Config>:

void GPIO_IRQ_Priority_Config(uint8_t IRQNumber, uint8_t IRQPriority){
 8000790:	b480      	push	{r7}
 8000792:	b085      	sub	sp, #20
 8000794:	af00      	add	r7, sp, #0
 8000796:	4603      	mov	r3, r0
 8000798:	460a      	mov	r2, r1
 800079a:	71fb      	strb	r3, [r7, #7]
 800079c:	4613      	mov	r3, r2
 800079e:	71bb      	strb	r3, [r7, #6]
	if (IRQNumber<=59){
 80007a0:	79fb      	ldrb	r3, [r7, #7]
 80007a2:	2b3b      	cmp	r3, #59	; 0x3b
 80007a4:	d81c      	bhi.n	80007e0 <GPIO_IRQ_Priority_Config+0x50>
		uint8_t RegNum = IRQNumber/4;
 80007a6:	79fb      	ldrb	r3, [r7, #7]
 80007a8:	089b      	lsrs	r3, r3, #2
 80007aa:	73fb      	strb	r3, [r7, #15]
		uint8_t RegOffest = IRQNumber%4;
 80007ac:	79fb      	ldrb	r3, [r7, #7]
 80007ae:	f003 0303 	and.w	r3, r3, #3
 80007b2:	73bb      	strb	r3, [r7, #14]
		*(NVIC_IPR0_ADDR + RegNum) |= (IRQPriority<<((RegOffest*8) + (8-NO_PR_BITS_IMPL)));
 80007b4:	7bfb      	ldrb	r3, [r7, #15]
 80007b6:	009b      	lsls	r3, r3, #2
 80007b8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007bc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007c0:	681a      	ldr	r2, [r3, #0]
 80007c2:	79b9      	ldrb	r1, [r7, #6]
 80007c4:	7bbb      	ldrb	r3, [r7, #14]
 80007c6:	00db      	lsls	r3, r3, #3
 80007c8:	3304      	adds	r3, #4
 80007ca:	fa01 f303 	lsl.w	r3, r1, r3
 80007ce:	4619      	mov	r1, r3
 80007d0:	7bfb      	ldrb	r3, [r7, #15]
 80007d2:	009b      	lsls	r3, r3, #2
 80007d4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007d8:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007dc:	430a      	orrs	r2, r1
 80007de:	601a      	str	r2, [r3, #0]
	}
}
 80007e0:	bf00      	nop
 80007e2:	3714      	adds	r7, #20
 80007e4:	46bd      	mov	sp, r7
 80007e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ea:	4770      	bx	lr

080007ec <delay>:
#include "stm32f411re.h"
#define PRESSED 0

void delay(void){
 80007ec:	b480      	push	{r7}
 80007ee:	b083      	sub	sp, #12
 80007f0:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<1000000; i++);
 80007f2:	2300      	movs	r3, #0
 80007f4:	607b      	str	r3, [r7, #4]
 80007f6:	e002      	b.n	80007fe <delay+0x12>
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	3301      	adds	r3, #1
 80007fc:	607b      	str	r3, [r7, #4]
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	4a04      	ldr	r2, [pc, #16]	; (8000814 <delay+0x28>)
 8000802:	4293      	cmp	r3, r2
 8000804:	d9f8      	bls.n	80007f8 <delay+0xc>
}
 8000806:	bf00      	nop
 8000808:	bf00      	nop
 800080a:	370c      	adds	r7, #12
 800080c:	46bd      	mov	sp, r7
 800080e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000812:	4770      	bx	lr
 8000814:	000f423f 	.word	0x000f423f

08000818 <main>:

int main(void)
{
 8000818:	b580      	push	{r7, lr}
 800081a:	b086      	sub	sp, #24
 800081c:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLED;
	GPIOLED.pGPIOx= GPIOC;
 800081e:	4b18      	ldr	r3, [pc, #96]	; (8000880 <main+0x68>)
 8000820:	60fb      	str	r3, [r7, #12]
	GPIOLED.GPIO_Config.GPIO_PinNumber=GPIO_PIN_NUM_8;
 8000822:	2308      	movs	r3, #8
 8000824:	743b      	strb	r3, [r7, #16]
	GPIOLED.GPIO_Config.GPIO_PinMode=GPIO_MODE_OUT;
 8000826:	2301      	movs	r3, #1
 8000828:	747b      	strb	r3, [r7, #17]
	GPIOLED.GPIO_Config.GPIO_PinOPType=GPIO_OP_TYPES_PP;
 800082a:	2300      	movs	r3, #0
 800082c:	753b      	strb	r3, [r7, #20]
	GPIOLED.GPIO_Config.GPIO_PinSpeed=GPIO_OP_SPEED_FAST;
 800082e:	2302      	movs	r3, #2
 8000830:	74bb      	strb	r3, [r7, #18]
	GPIOLED.GPIO_Config.GPIO_PinPuPdControl=GPIO_NO_PUPD;
 8000832:	2300      	movs	r3, #0
 8000834:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000836:	2101      	movs	r1, #1
 8000838:	4811      	ldr	r0, [pc, #68]	; (8000880 <main+0x68>)
 800083a:	f7ff fccd 	bl	80001d8 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOLED);
 800083e:	f107 030c 	add.w	r3, r7, #12
 8000842:	4618      	mov	r0, r3
 8000844:	f7ff fd68 	bl	8000318 <GPIO_Init>

	GPIO_Handle_t GPIOButton;
	GPIOButton.pGPIOx= GPIOC;
 8000848:	4b0d      	ldr	r3, [pc, #52]	; (8000880 <main+0x68>)
 800084a:	603b      	str	r3, [r7, #0]
	GPIOButton.GPIO_Config.GPIO_PinNumber=GPIO_PIN_NUM_7;
 800084c:	2307      	movs	r3, #7
 800084e:	713b      	strb	r3, [r7, #4]
	GPIOButton.GPIO_Config.GPIO_PinMode=GPIO_MODE_IT_RT;
 8000850:	2305      	movs	r3, #5
 8000852:	717b      	strb	r3, [r7, #5]
	//GPIOButton.GPIO_Config.GPIO_PinOPType=GPIO_OP_TYPES_PP;
	GPIOButton.GPIO_Config.GPIO_PinSpeed=GPIO_OP_SPEED_FAST;
 8000854:	2302      	movs	r3, #2
 8000856:	71bb      	strb	r3, [r7, #6]
	GPIOButton.GPIO_Config.GPIO_PinPuPdControl=GPIO_PIN_PU;
 8000858:	2301      	movs	r3, #1
 800085a:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOC, ENABLE);
 800085c:	2101      	movs	r1, #1
 800085e:	4808      	ldr	r0, [pc, #32]	; (8000880 <main+0x68>)
 8000860:	f7ff fcba 	bl	80001d8 <GPIO_PeriClockControl>
	GPIO_Init(&GPIOButton);
 8000864:	463b      	mov	r3, r7
 8000866:	4618      	mov	r0, r3
 8000868:	f7ff fd56 	bl	8000318 <GPIO_Init>

	GPIO_IRQ_Interrupt_Config(IRQ_NO_EXTI5_9, ENABLE);
 800086c:	2101      	movs	r1, #1
 800086e:	2017      	movs	r0, #23
 8000870:	f7ff ff08 	bl	8000684 <GPIO_IRQ_Interrupt_Config>
	GPIO_IRQ_Priority_Config(IRQ_NO_EXTI5_9, NVIC_IRQ_PRI15);
 8000874:	210f      	movs	r1, #15
 8000876:	2017      	movs	r0, #23
 8000878:	f7ff ff8a 	bl	8000790 <GPIO_IRQ_Priority_Config>



	for(;;){
 800087c:	e7fe      	b.n	800087c <main+0x64>
 800087e:	bf00      	nop
 8000880:	40020800 	.word	0x40020800

08000884 <EXTI9_5_IRQHandler>:
		}*/
		//delay();
	}
}

void EXTI9_5_IRQHandler(void){
 8000884:	b580      	push	{r7, lr}
 8000886:	af00      	add	r7, sp, #0
	delay(); //Avoid switch debouncing
 8000888:	f7ff ffb0 	bl	80007ec <delay>
	//GPIO_IRQHandling(GPIO_PIN_NUM_7);
	GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NUM_8);
 800088c:	2108      	movs	r1, #8
 800088e:	4802      	ldr	r0, [pc, #8]	; (8000898 <EXTI9_5_IRQHandler+0x14>)
 8000890:	f7ff fee2 	bl	8000658 <GPIO_ToggleOutputPin>
	//GPIO_IRQ_Interrupt_Config(IRQ_NO_EXTI5_9, DISABLE);
}
 8000894:	bf00      	nop
 8000896:	bd80      	pop	{r7, pc}
 8000898:	40020800 	.word	0x40020800

0800089c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800089c:	480d      	ldr	r0, [pc, #52]	; (80008d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800089e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008a4:	480c      	ldr	r0, [pc, #48]	; (80008d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80008a6:	490d      	ldr	r1, [pc, #52]	; (80008dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80008a8:	4a0d      	ldr	r2, [pc, #52]	; (80008e0 <LoopForever+0xe>)
  movs r3, #0
 80008aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008ac:	e002      	b.n	80008b4 <LoopCopyDataInit>

080008ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008b2:	3304      	adds	r3, #4

080008b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008b8:	d3f9      	bcc.n	80008ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008ba:	4a0a      	ldr	r2, [pc, #40]	; (80008e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008bc:	4c0a      	ldr	r4, [pc, #40]	; (80008e8 <LoopForever+0x16>)
  movs r3, #0
 80008be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008c0:	e001      	b.n	80008c6 <LoopFillZerobss>

080008c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008c4:	3204      	adds	r2, #4

080008c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008c8:	d3fb      	bcc.n	80008c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ca:	f000 f811 	bl	80008f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ce:	f7ff ffa3 	bl	8000818 <main>

080008d2 <LoopForever>:

LoopForever:
  b LoopForever
 80008d2:	e7fe      	b.n	80008d2 <LoopForever>
  ldr   r0, =_estack
 80008d4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80008d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80008e0:	08000958 	.word	0x08000958
  ldr r2, =_sbss
 80008e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80008e8:	2000001c 	.word	0x2000001c

080008ec <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008ec:	e7fe      	b.n	80008ec <ADC_IRQHandler>
	...

080008f0 <__libc_init_array>:
 80008f0:	b570      	push	{r4, r5, r6, lr}
 80008f2:	4d0d      	ldr	r5, [pc, #52]	; (8000928 <__libc_init_array+0x38>)
 80008f4:	4c0d      	ldr	r4, [pc, #52]	; (800092c <__libc_init_array+0x3c>)
 80008f6:	1b64      	subs	r4, r4, r5
 80008f8:	10a4      	asrs	r4, r4, #2
 80008fa:	2600      	movs	r6, #0
 80008fc:	42a6      	cmp	r6, r4
 80008fe:	d109      	bne.n	8000914 <__libc_init_array+0x24>
 8000900:	4d0b      	ldr	r5, [pc, #44]	; (8000930 <__libc_init_array+0x40>)
 8000902:	4c0c      	ldr	r4, [pc, #48]	; (8000934 <__libc_init_array+0x44>)
 8000904:	f000 f818 	bl	8000938 <_init>
 8000908:	1b64      	subs	r4, r4, r5
 800090a:	10a4      	asrs	r4, r4, #2
 800090c:	2600      	movs	r6, #0
 800090e:	42a6      	cmp	r6, r4
 8000910:	d105      	bne.n	800091e <__libc_init_array+0x2e>
 8000912:	bd70      	pop	{r4, r5, r6, pc}
 8000914:	f855 3b04 	ldr.w	r3, [r5], #4
 8000918:	4798      	blx	r3
 800091a:	3601      	adds	r6, #1
 800091c:	e7ee      	b.n	80008fc <__libc_init_array+0xc>
 800091e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000922:	4798      	blx	r3
 8000924:	3601      	adds	r6, #1
 8000926:	e7f2      	b.n	800090e <__libc_init_array+0x1e>
 8000928:	08000950 	.word	0x08000950
 800092c:	08000950 	.word	0x08000950
 8000930:	08000950 	.word	0x08000950
 8000934:	08000954 	.word	0x08000954

08000938 <_init>:
 8000938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800093a:	bf00      	nop
 800093c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800093e:	bc08      	pop	{r3}
 8000940:	469e      	mov	lr, r3
 8000942:	4770      	bx	lr

08000944 <_fini>:
 8000944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000946:	bf00      	nop
 8000948:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800094a:	bc08      	pop	{r3}
 800094c:	469e      	mov	lr, r3
 800094e:	4770      	bx	lr
